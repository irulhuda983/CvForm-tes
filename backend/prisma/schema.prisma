generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  profileCode       String       @id
  wantedJobTitle    String
  firstName         String
  lastName          String
  email             String
  phone             String?
  country           String?
  city              String?
  address           String?
  postalCode        Int?
  drivingLicense    String?
  nationality       String?
  placeOfBirth      String?
  dateOfBirth       DateTime?
  photo             String?
  workingExperience String?      @db.Text
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  educations        Education[]  @relation("ProfileToEducation")
  employments       Employment[] @relation("ProfileToEmployment")
  skills            Skill[]      @relation("ProfileToSkill")

  @@map("profile")
}

model Employment {
  id          Int       @id @default(autoincrement())
  profileCode String
  jobTitle    String
  employer    String
  startDate   DateTime
  endDate     DateTime?
  city        String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     Profile   @relation("ProfileToEmployment", fields: [profileCode], references: [profileCode], onDelete: Cascade)

  @@index([profileCode], map: "employment_profileCode_fkey")
  @@map("employment")
}

model Education {
  id          Int       @id @default(autoincrement())
  profileCode String
  school      String
  degree      String
  startDate   DateTime
  endDate     DateTime?
  city        String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     Profile   @relation("ProfileToEducation", fields: [profileCode], references: [profileCode], onDelete: Cascade)

  @@index([profileCode], map: "education_profileCode_fkey")
  @@map("education")
}

model Skill {
  id          Int      @id @default(autoincrement())
  profileCode String
  skill       String
  level       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  profile     Profile  @relation("ProfileToSkill", fields: [profileCode], references: [profileCode], onDelete: Cascade)

  @@index([profileCode], map: "skill_profileCode_fkey")
  @@map("skill")
}
